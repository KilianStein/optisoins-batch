import java.time.LocalDate
import java.time.LocalDateTime
import org.ajoberstar.grgit.Grgit


buildscript {
    ext {
        springBootVersion = '2.0.0.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'edu.sc.seis.gradle:launch4j:2.4.3'
        classpath "org.ajoberstar:grgit:2.1.1"
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'edu.sc.seis.launch4j'
apply plugin: "org.ajoberstar.grgit"

group = 'nc.ki.optisoins'
version = '2.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url "http://jaspersoft.artifactoryonline.com/jaspersoft/third-party-ce-artifacts/"
    }
}

jar {
    enabled = true
}

bootJar {
    launchScript()
    classifier = 'boot'
}

bootRun {
    main = 'ki.optisoins.OptisoinsBatchApplication'
}

launch4j {
    mainClassName = 'ki.optisoins.OptisoinsBatchApplication'
    icon = "${projectDir}/icons/optisoinslogo.ico"
    headerType = "console"
    language = "FRENCH"
    trademarks = "Kilian Stein"
    copyright = "Kilian Stein"
    dontWrapJar = true
}

task versionTxt {
    doLast {
        createExe.getOutputDirectory().toPath().resolve('version.txt').toFile().text =
                """Version: $version
Revision: ${Grgit.open(dir: '.').head().id}
Buildtime: ${LocalDateTime.now()}
Application-name: optisoins-batch"""
    }
}
versionTxt.dependsOn createExe

task createZipLivrable(type: Zip) {
    from createExe.getOutputDirectory()
    include '*'
    include '*/*'
    archiveName 'optisoins-batch-' + version + '.zip'
    destinationDir(file('./build/livrable'))
}
createZipLivrable.dependsOn createExe


task updateDescriptor {
    doLast {
        File descriptorFile = projectDir.toPath().resolve("descriptor.json").toFile()
        String testUpdated = descriptorFile.getText("UTF-8")
                .replace("[VERSION_NAME]", version.toString())
                .replace("[VERSION_DATE]", LocalDate.now().toString())
                .replace("[VERSION_VCS_TAG]", version.toString())
                .replace("[VERSION_REVISION]", Grgit.open(dir: '.').head().id)

        descriptorFile.withWriter('UTF-8') { writer ->
            writer.write(testUpdated)
        }
    }
}
updateDescriptor.dependsOn createExe

dependencies {
    compile('org.springframework.boot:spring-boot-starter')

    compile group: 'net.vidageek', name: 'mirror', version: '1.6.1'
    compile group: 'net.sf.jasperreports', name: 'jasperreports', version: '6.5.1'
    compile group: 'com.lowagie', name: 'itext', version: '2.1.7'
    compile group: 'org.apache.poi', name: 'poi', version: '3.17'

    testCompile('org.springframework.boot:spring-boot-starter-test')
}
